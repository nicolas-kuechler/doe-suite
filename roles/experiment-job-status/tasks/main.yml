---

# TODO: remove
- debug:
    msg: "unfinished_job_idx: {{ unfinished_job_idx }}"

#
# Experiment status checking
#

- name: Check the job status (`n_check` in the experiment config YAML controls how many hosts are checked)
  include_tasks:
    file: get_status.yml
  # there are some unfinished jobs left
  when: (exp_fact.exp_job_ids_unfinished | length) > 0

#
# Experiment result gathering
#

# Create local directory and fetch results
- name: Fetch the results
  include_tasks:
    file: fetch_results.yml
  vars:
    remote_results_dir: "{{ exp_working_dir }}/results"
    local_results_dir: "results/{{ exp_suite }}/{{ exp_name }}_{{ exp_id }}/\
                        run_{{ exp_run }}/rep_{{ exp_run_rep }}"
  loop: "{{ range(0, (exp_hosts | length), 1) | list }}"
  loop_control:
    loop_var: host_idx

#
# Update experiment state
#
- name: "Update the job IDs list (remove experiment job {{ running_job_id }} from running)"
  set_fact:
    exp_runs_ext: "{{ exp_fact.exp_runs_ext }}"
    exp_job_ids: "{{ exp_fact.exp_job_ids }}"
    exp_job_ids_unfinished: "{{ exp_fact.exp_job_ids_pending }}"
    exp_job_ids_pending: "{{ exp_fact.exp_job_ids_pending }}"
    exp_job_ids_running: []

- name: Save the updated state of the experiment run (save job ids)
  include_role:
    name: experiment-state
  vars:
    expstate: save
    redefine_exp_id: "{{ False }}"

#
# Run next job
#
- name: Run the next job
  include_role:
    name: experiment-job
