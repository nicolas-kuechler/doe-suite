---

- name: Set instance tags to remove (without ansible controller)
  ansible.builtin.set_fact:
    instance_tags: "{{ groups.keys() }}"
  when: awsclean

- name: Set instance tags to remove (with ansible controller)
  ansible.builtin.set_fact:
    instance_tags: "{{ groups.keys() + [ ec2_tag_name_prefix + 'ansible_controller' ] }}"
  when: awscleanall | default(false)

- name: Collect info about running ec2 instances
  community.aws.ec2_instance_info:
    region: "{{ exp_base.aws_region }}"
    filters:
      "tag:Name": "{{ instance_tag | split(ec2_tag_name_prefix) | last }}"
  when: instance_tag is match(ec2_tag_name_prefix + prj_id + '_*')
  loop: "{{ instance_tags }}"
  loop_control:
    loop_var: instance_tag
  register: ec2_instances

- name: Extract instance ids of ec2 instances to remove
  ansible.builtin.set_fact:
    ec2_instance_ids: "{{ ec2_instances | json_query('results[*].instances[*].instance_id') | list | flatten }}"

- ansible.builtin.pause:
    seconds: 10
    prompt: |
      "Removing instances with the following ids:
       {{ ec2_instance_ids }}

       If the above instance IDs are wrong, abort now! (CTRL+C followed by 'A')"
  tags: [print_action]

- name: Cleanup AWS
  community.aws.ec2_instance:
    instance_ids: "{{ ec2_instance_ids }}"
    region: "{{ exp_base.aws_region }}"
    state: absent
  when: (ec2_instance_ids | length) > 0

- name: Remove AWS VPC
  ansible.builtin.include_role:
    name: suite-aws-vpc-delete
