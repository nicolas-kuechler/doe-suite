---

- assert:
    that:
    - host_group_name is defined
    - host_exp_values is defined
    - host_n_tot is defined

- name: "Manually load variables for host in group '{{ host_group_name }}'"
  include_vars:
    file: "group_vars/{{ host_group_name }}/main.yml"
    name: host_group_vars

- debug:
    msg: "-> creating EC2 instance for group '{{ host_group_name }}'..."
  tags: [print_action]
  when: (host_n_tot | int) > 0

- debug:
    msg: "-> terminating EC2 instances for group '{{ host_group_name }}'..."
  tags: [print_action]
  when: (host_n_tot | int) == 0

# XXX: Optimization potential: it's way faster to generate all instances of the same
# group at once, instead of per experiment. But for that we need to figure out how
# to set tags later to assign instances to specific experiments, because the ec2 role
# names all of them the same by default.
- name: Create EC2 Instances
  include_role:
    name: experiment-aws-ec2
  when: instance_group != 'all'
  vars:
    instance_values: "{{ host_items.value }}"
    instance_exp: "{{ host_items.key }}"
    instance_group: "{{ host_group_name }}{{ separator }}{{ instance_exp }}"
    ec2config: "{{ host_group_vars \
                  | combine( exp_base ) \
                  | combine({ \
                      'instance_tag': prj_id + '_' + instance_group,
                      'host_group': instance_group
                    }) \
               }}"
  loop: "{{ host_exp_values | dict2items }}"
  loop_control:
    loop_var:
      host_items
