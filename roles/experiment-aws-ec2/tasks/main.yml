---

- assert:
    that:
    - ec2config is defined

- name: Launching ec2 instances
  ec2:
    instance_type: '{{ ec2config.instance_type }}'
    key_name: '{{ ec2config.key_name }}'
    image: '{{ ec2config.ec2_image }}'
    region: '{{ ec2config.aws_region }}'
    group: '{{ ec2config.sg_name }}'
    exact_count: '{{ instance_values.n }}'
    count_tag:
      Name: '{{ ec2config.instance_tag }}'
    vpc_subnet_id: '{{ ec2config.vpc_subnet_id }}'
    wait: yes
    assign_public_ip: yes
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        snapshot: '{{ ec2config.ec2_volume_snapshot }}'
        volume_size: '{{ ec2config.ec2_volume_size }}'
        delete_on_termination: True
    instance_tags:
      Name: "{{ ec2config.instance_tag }}"
      Prj: "{{ prj_id }}"
      Exp: "{{ instance_exp }}"
  register: ec2_launch

# Optimization: we first start all ec2 instances and then wait for SSH, refresh
# the inventory, and start/stop other instances afterwards.
- name: Register public dns name for postponed inventory update
  set_fact:
    public_dns_names: "{{ public_dns_names | default({}) \
                          | combine({ ec2config.instance_tag: ( ec2_launch.instances
                                                                | map(attribute='public_dns_name')
                                                                | list )
                                    }, recursive=True) \
                       }}"
  when: ec2_launch.instances is defined
