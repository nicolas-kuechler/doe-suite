---

- assert:
    that:
      - exp_base is defined

- debug:
    msg: "-> testing connection with Euler {{ groups }}"
  tags: [print_action]

- name: Refresh dynamic inventory
  meta: refresh_inventory

- pause:
    seconds: 5

- name: Define public dns
  set_fact:
    public_dns_hostname: "{{ groups['euler'][0] }}"

- name: Test connection with Euler
  delegate_to: "{{ public_dns_hostname }}"
  wait_for_connection:
    connect_timeout: 3
    timeout: 320

- debug:
    var: host_types

# TODO hly: check we are not running any experiment configurations that are illegal (eg multi-server experiments)

#- name: enrich host list with euler
#  set_fact:
#    suite_hosts_lst:
#      - instance_id: euler
#        exp_name: test
- name: Pick single host type
  set_fact:
    euler_host_type: "{{ host_types | dict2items | first | json_query('key') }}"
    debug_var: "{{ host_types | dict2items | first | json_query('value.*.n') | unique }}"

- debug:
    var: debug_var

- name: Assert that we only have a single host type and that all number counts equal 1
  assert:
    that:
      - host_types | dict2items | length == 1
      - host_types | dict2items | first | json_query('value.*.n') | unique | union([1]) | length == 1

- name: Define euler host and determine number of experiments in this host
  set_fact:
    euler_host_helper:
      instance_id: euler
      tags:
        host_type: "{{ euler_host_type }}" # how to fix? host_types
        idx: 0
    euler_host_number_experiments: "{{ host_types[euler_host_type] | dict2items | length }}"

- name: Abuse to_tag_assignment
  set_fact:
    tag_assignment_lst: "{{ instance_infos | to_tag_assignment(host_types)}}"
    # list of all instances with their id and other relevant infos
    # [{"instance_id": X, "exp_name": X, "is_controller": X, "host_type": X, "exp_host_type_idx": X, "exp_host_type_n": X, "init_roles": X, "check_status": X}, ...]
  vars:
    instance_infos: "{{ [euler_host_helper] * euler_host_number_experiments|int }} "

- debug:
    var: tag_assignment_lst

- set_fact:
    suite_hosts_lst: []

- name: enrich host list with public_dns_name and private_dns_name
  set_fact:
    suite_hosts_lst: "{{ suite_hosts_lst + [tag_assignment | combine({'public_dns_name': public_dns_hostname, 'private_dns_name': None})] }}"
    # list of all instances with their id and other relevant infos (+ public and private dns names)
    # [{"instance_id": X, "exp_name": X, "is_controller": X, "host_type": X, "exp_host_type_idx": X, "exp_host_type_n": X, "init_roles": X, "check_status": X, "public_dns_name": X, "private_dns_name": X}, ...]

  loop: "{{ tag_assignment_lst }}"
  loop_control:
    loop_var: tag_assignment

- debug:
    var: suite_hosts_lst