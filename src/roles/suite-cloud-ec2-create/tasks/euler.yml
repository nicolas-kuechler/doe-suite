---

- assert:
    that:
      - exp_base is defined

- debug:
    msg: "-> testing connection with Euler {{ groups }}"
  tags: [print_action]

- name: Refresh dynamic inventory
  meta: refresh_inventory

- pause:
    seconds: 5

- name: Test connection with Euler
  delegate_to: "{{ groups['euler'][0] }}"
  wait_for_connection:
    connect_timeout: 3
    timeout: 320

- debug:
    var: host_types

# TODO hly: check we are not running any experiment configurations that are illegal (eg multi-server experiments)

#- name: enrich host list with euler
#  set_fact:
#    suite_hosts_lst:
#      - instance_id: euler
#        exp_name: test

- name: Abuse to_tag_assignment
  set_fact:
    tag_assignment_lst: "{{ instance_infos | to_tag_assignment(host_types)}}"
    # list of all instances with their id and other relevant infos
    # [{"instance_id": X, "exp_name": X, "is_controller": X, "host_type": X, "exp_host_type_idx": X, "exp_host_type_n": X, "init_roles": X, "check_status": X}, ...]
  vars:
    instance_infos:
      - instance_id: euler
        tags: []


- name: enrich host list with public_dns_name and private_dns_name
  set_fact:
    suite_hosts_lst: "{{ suite_hosts_lst + [tag_assignment | combine({'public_dns_name': public_dns_lookup[tag_assignment.instance_id], 'private_dns_name': private_dns_lookup[tag_assignment.instance_id]})] }}"
    # list of all instances with their id and other relevant infos (+ public and private dns names)
    # [{"instance_id": X, "exp_name": X, "is_controller": X, "host_type": X, "exp_host_type_idx": X, "exp_host_type_n": X, "init_roles": X, "check_status": X, "public_dns_name": X, "private_dns_name": X}, ...]

  loop: "{{ tag_assignment_lst }}"
  loop_control:
    loop_var: tag_assignment