---

# This role creates a VPC for the project (i.e., not one per suite, one per project)
# with a single subnet and security group. All ec2 instances are placed into this security group
# and all ports are open for instances within the security group.

- assert:
    that:
    - exp_base is defined

- debug:
    msg: "-> creating VPC..."
  tags: [print_action]

- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ exp_base.vpc_name }}"
    cidr_block: "{{ exp_base.vpc_cidr_block }}"
    region: "{{ exp_base.aws_region }}"
    purge_tags: True
    state: present
  register: my_vpc

- name: Set VPC ID in variable
  set_fact:
    exp_base: "{{ exp_base | combine({'vpc_id': my_vpc.vpc.id}) }}"

- name: Create Public Subnet [AZ-1]
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ exp_base.vpc_id }}"
    cidr: "{{ exp_base.vpc_subnet_cidr }}"
    az: "{{ exp_base.aws_region }}{{ exp_base.aws_zone | default('a') }}"
    region: "{{ exp_base.aws_region }}"
    map_public: yes
    resource_tags:
      Name: "{{ exp_base.vpc_subnet_name }}"
  register: public_subnet_client


- name: Set Public Subnet ID in variables
  set_fact:
    exp_base: "{{ exp_base | combine({'vpc_subnet_id': public_subnet_client.subnet.id}) }}"

- name: Create Internet Gateway for VPC
  community.aws.ec2_vpc_igw:
    vpc_id: "{{ exp_base.vpc_id }}"
    region: "{{ exp_base.aws_region }}"
    state: present
  register: vpc_igw

- name: Set Internet Gateway ID in variable
  set_fact:
    exp_base: "{{ exp_base | combine({'igw_id': vpc_igw.gateway_id}) }}"

- name: Set up public route table
  community.aws.ec2_vpc_route_table:
    vpc_id: "{{ exp_base.vpc_id }}"
    region: "{{ exp_base.aws_region }}"
    tags:
      Name: "Public"
    subnets:
      - "{{ exp_base.vpc_subnet_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ exp_base.igw_id }}"

- name: Create Security Group
  amazon.aws.ec2_group:
    name: "{{ exp_base.sg_name }}"
    description: "{{ exp_base.sg_desc }}"
    vpc_id: "{{ exp_base.vpc_id }}"
    region: "{{ exp_base.aws_region }}"
  register: sg

- name: Set client group id + route table id
  set_fact:
    exp_base: "{{ exp_base | combine({'sg_id': sg.group_id, 'sg_ownerid': sg.owner_id }) }}"

- name: Add rules to Security Group
  amazon.aws.ec2_group:
    name: "{{ exp_base.sg_name }}"
    description: "{{ exp_base.sg_desc }}"
    vpc_id: "{{ exp_base.vpc_id }}"
    region: "{{ exp_base.aws_region }}"
    rules:
      - proto: all
        group_id: "{{ exp_base.sg_ownerid }}/{{ exp_base.sg_id }}/{{ exp_base.sg_name }}"
      - proto: tcp
        ports: 22
        cidr_ip: 0.0.0.0/0

- name: Create ENI(s)
  amazon.aws.ec2_eni:
    subnet_id: "{{ exp_base.vpc_subnet_id }}"
    name: "{{ my_eni.name }}"
    description: "{{ my_eni.desc }}"
    region: "{{ exp_base.aws_region }}"
    security_groups: "{{ exp_base.sg_name }}"
    state: present
    delete_on_termination: false # don't delete when instance is terminated
  register: eni
  loop:  "{{ exp_base.eni }}"
  loop_control:
    loop_var: my_eni
  when: exp_base.eni is defined

- name: add available eni to exp_base
  set_fact:
    exp_base: "{{ exp_base | combine({'eni': eni | json_query(my_query) }, recursive=true) }}"
  vars:
    my_query: "results[].{name: interface.name, id: interface.id, mac_address: interface.mac_address}"
  when: exp_base.eni is defined


- debug: msg="exp base config= {{ exp_base }}"
  #tags: [print_action]