---

- assert:
    that:
      - exp_base is defined

- debug:
    msg: "-> testing connection with Euler {{ groups }}"
  tags: [print_action]

- name: Refresh dynamic inventory
  meta: refresh_inventory

- pause:
    seconds: 5

- name: Define public dns
  set_fact:
    public_dns_hostname: "{{ hostvars[groups['euler'][0]]['ansible_host'] }}"

- name: Test connection with Euler
  delegate_to: "{{ public_dns_hostname }}"
  wait_for_connection:
    connect_timeout: 3
    timeout: 320

#- debug:
#    var: host_types

- name: Abuse to_tag_assignment
  set_fact:
    tag_assignment_lst: "{{ groups['is_controller_yes'] | to_euler_tag_assignment(host_types) }}"
    # list of all instances with their id and other relevant infos
    # [{"instance_id": X, "exp_name": X, "is_controller": X, "host_type": X, "exp_host_type_idx": X, "exp_host_type_n": X, "init_roles": X, "check_status": X}, ...]

#- debug:
#    var: tag_assignment_lst

- set_fact:
    suite_hosts_lst: []

- name: enrich host list with public_dns_name, private_dns_name and ansible_host_id
  set_fact:
    suite_hosts_lst: "{{ suite_hosts_lst + [tag_assignment | combine({'public_dns_name': public_dns_hostname, 'private_dns_name': None, 'ansible_host_id': tag_assignment.instance_id })] }}"
    # list of all instances with their id and other relevant infos (+ public and private dns names)
    # [{"instance_id": X, "exp_name": X, "is_controller": X, "host_type": X, "exp_host_type_idx": X, "exp_host_type_n": X, "init_roles": X, "check_status": X, "public_dns_name": X, "private_dns_name": X}, ...]

  loop: "{{ tag_assignment_lst }}"
  loop_control:
    loop_var: tag_assignment

#- debug:
#    var: suite_hosts_lst