
---

- assert:
    that:
      - exp_jobs_to_enqueue is defined
      - exp_name is defined

#- name: deb
#  debug:
#    msg: "{{ exp_jobs_to_enqueue }}"

#- name: debug
#  debug:
#    msg: "{{ host_types }}"
#
#- name: kill
#  assert:
#    that:
#      - False

# TODO [nku] should query the queue and figure kill all experiments from same suite (or same suite + experiment)?


- name: schedule the job on euler using slurm (sbatch)
  vars:
    experiment_name: "{{ job.job_info | safe_job_info_string }}"
    output_file: "{{ job.exp_working_dir }}/results/stdout.log"
    error_file: "{{ job.exp_working_dir }}/results/stderr.log"
    gpu_cmd: >-
      {{ '--gpus=' + euler_gpu_number | string + ' --gres=gpumem:' + euler_gpu_min_mem_per_gpu_mb | string
      if euler_gpu_model is none
      else
      '--gpus=' + euler_gpu_model + ':' +  euler_gpu_number | string }}
    cpu_cmd: --time={{ euler_job_minutes }} -n {{ euler_cpu_cores }} --mem-per-cpu={{ euler_cpu_mem_per_core_mb }}
  register: sbatch_output
  shell: |
    source /etc/profile
    source ~/.bash_profile
    . /cluster/apps/local/env2lmod.sh
    module load {{ euler_env }}
    sbatch -J {{ experiment_name }} -o {{ output_file }} -e {{ error_file }} --open-mode=truncate {{ cpu_cmd }} {{ gpu_cmd if euler_gpu_number | int > 0 }} --wrap "{{ job.exp_run_cmd | replace('"', "'") }}"
  args:
    chdir: "{{ job.exp_working_dir }}"
    executable: /bin/bash
  delegate_to: "{{ job.host_info.public_dns_name }}"
  loop: "{{ exp_jobs_to_enqueue }}"
  loop_control:
    loop_var: job
