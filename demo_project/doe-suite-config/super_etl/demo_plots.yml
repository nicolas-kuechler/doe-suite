
# SUPER ETL demo file.
# More details can be found in `docs/etl.md`
#
# Super ETL also supports multiple outputs from different suites can be combined here, but this file does not demo that functionality.

$SUITE_ID$:
  example02-single: $expected #00000001 # SUITE ID

  # ... if more suites exist, other ids

$ETL$:
  pipeline1:
    experiments:
      example02-single: [ experiment_1 ]
      # combine with experiments from other suites
    extractors:
      JsonExtractor: {} # with default file_regex
      ErrorExtractor: {} # if a non-empty file exists matching the default regex -> then we throw an error using the ErrorExtractor
      IgnoreExtractor: {} # since we want that each file is processed by an extractor, we provide the IgnoreExtractor which can be used to ignore certain files. (e.g., stdout)
    transformers:
      - name: RepAggTransformer # aggregate over all repetitions of a run and calc `mean`, `std`, etc.
        data_columns: [latency] # the names of the columns in the dataframe that contain the measurements
    loaders:
      CsvSummaryLoader: {} # write the transformed detl_info["suite_dir"]ataframe across the whole experiment as a csv file
      DemoLatencyPlotLoader: {} # create a plot based on project-specific plot loader
