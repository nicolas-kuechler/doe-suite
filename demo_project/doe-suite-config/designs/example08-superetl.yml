# The goal of this design is to generate test data to showcase features of the super etl
#  (see `demo_project/doe-suite-config/super_etl/demo_plots.yml`).
#

# Demonstrate:
#  (1) using a custom jinja filter_plugin `generate_fake_data` to improve the readability of the design
#       see `demo_project/doe-suite-config/designs/filter_plugins/data.py`

dummydata:
  n_repetitions: 1
  host_types:
    small_v2:
        n: 1
        init_roles: setup-small
        # (1) The filter_plugin `generate_fake_data` allows formatting part of the command using python code
        #      see `demo_project/doe-suite-config/designs/filter_plugins/data.py`
        $CMD$: "printf '[%  my_run.n_measurements | generate_fake_data(my_run.system, my_run.system_config, my_run.workload) %]' > results/performance.yaml"
  base_experiment:
    n_measurements: 5
    system:
      $FACTOR$: [system1, system2, system3]
    system_config:
      $FACTOR$: [v1, v2]
    workload:
      $FACTOR$: [workload1, workload2]


$ETL$: # ensures that stderr.log is empty everywhere and that no files are generated except stdout.log
  check_error:
    experiments: "*"
    extractors: {ErrorExtractor: {},  IgnoreExtractor: {file_regex: ["stdout.log", "performance.yaml"]} }
