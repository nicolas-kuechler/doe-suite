prj_id: <<prj_id>> # TODO: set a project id (will be used to identify resources on AWS that belong to this project)
git_remote_repository: <<git_remote_repository>> # TODO: set remote repository (code will be cloned on each client and server host )


# TODO: set how often to check and how long to wait in between
# the playbook checks whether a job finished, fetches the results and starts the next job
#   these two flags control how often in total, the playbook repeats this before stopping (a job can still continue to run)
#   'exp_n_tries' is the total number of tries, and 'exp_check_wait_time' is the time in seconds to wait in between checking whether a job finsihed
#    (playbook runs for roughly 'exp_n_tries' * 'exp_check_wait_time' seconds unless the experiment finishes earlier)
exp_n_tries: <<exp_n_tries>>   # should be max 1000 (otherwise playbook freezes -> unsure why)
                               # TODO [mh]: must be tested if this is still an issue, I switched to an `until` loop
exp_check_wait_time: <<exp_check_wait_time>>

remote:
  dir: "/home/ubuntu"

local:
  results_dir: "./results"
  exp_state_dir: experiments/state

exp_base:
  key_name: <<key_name>> # TODO: add key pair name
  aws_region: eu-central-1
  name: frankfurt
  vpc_name: "{{ prj_id }}_vpc_base"
  vpc_cidr_block: 10.100.0.0/16
  vpc_subnet_name: "{{ prj_id }}_subnet_az1"
  vpc_subnet_cidr: 10.100.0.0/24
  sg_name: "{{ prj_id }}_sg"
  sg_desc: "{{ prj_id }} security group"

separator: '_SEP_'

# This prefix (incl. the capitalization) is chosen by the ec2 plugin
ec2_tag_name_prefix: 'tag_Name_'
ec2_tag_prj_prefix: 'tag_Prj_'
ec2_tag_exp_prefix: 'tag_Exp_'
